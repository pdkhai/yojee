# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2.1

orbs:
  aws-code-deploy: circleci/aws-code-deploy@1.0.1

jobs:
  build:
    docker:
      # specify the version here
      - image: circleci/elixir:1.10.3
        environment:
          MIX_ENV: test
      - image: circleci/postgres:10.1-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: app_test
          POSTGRES_PASSWORD:

    working_directory: ~/app

    steps:
      - checkout

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache
      - run: mix do deps.get, compile
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mix test

  deploy_staging:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          command: |
            ssh ubuntu@${WEBSERVER_STAG_IP} \<< EOF
              cd /src/yojee
              git reset --hard HEAD
              git pull
              mix deps.get --force
            EOF
  deploy_production:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          command: |
            ssh ubuntu@${WEBSERVER_PROD_IP} \<< EOF

              cd /src/yojee
              git reset --hard HEAD
              git pull
              mix deps.get --force
              mix ecto.migrate
            EOF
workflows:
  version: 2
  ci-cd:
    jobs:
      - build
      - deploy_staging:
          filters:
            branches:
              only: staging
          requires:
            - build
      - aws-code-deploy/deploy:
          filters:
            branches:
              only: master
          requires:
            - build
          application-name: yojee-webserver
          bundle-bucket: codedeploy-12010014062020
          bundle-key: deploy
          deployment-group: yojee-webserver
          service-role-arn: arn:aws:iam::478017650513:role/yojee-codedeploy